#Include "Libs/miltant/ObstacleV2/ManialinkLib.Script.txt"						as Styles
#Include "Libs/miltant/ObstacleV2/ScrollBar.Script.txt"	             		as Scroll

#Struct K_SubMenu {
	Text Name;
	Text Image;
    Text DangerouslySetControls;
    Text DangerouslySetControlsScriptInit;
    Text DangerouslySetControlsScriptLoop;
    Boolean PreventDefault;
}

Text Build(K_SubMenu[] _Menu) {
    declare ConcatItemsScriptsInit = "";
    declare ConcatItemsScriptsLoop = "";
    declare MenusML = "";

    declare ScrollML = "";
    declare ScrollInit = "";
    declare ScrollLoop = "";
    if (_Menu.count > 4) {
        ScrollML = Scroll::GetScrollBarML(<-160., -65.>, "Frame_Wrapper", "x");
        ScrollInit = Scroll::GetInitFrames();
        ScrollLoop = Scroll::GetLoop();
    }

    foreach (I => Item in _Menu) {
        if (Item.DangerouslySetControlsScriptInit != "" && Item.DangerouslySetControlsScriptLoop != "") {
            declare AlreadyAddedInit = False;
            declare AlreadyAddedLoop = False;
    
            if (I < _Menu.count - 2) {
                for (Test, I + 1, _Menu.count) {
                    if (_Menu[Test].DangerouslySetControlsScriptInit == Item.DangerouslySetControlsScriptInit)
                        AlreadyAddedInit = True;
                    if (_Menu[Test].DangerouslySetControlsScriptLoop == Item.DangerouslySetControlsScriptLoop)
                        AlreadyAddedLoop = True;
                }
            }

            if (!AlreadyAddedInit)
                ConcatItemsScriptsInit ^= Item.DangerouslySetControlsScriptInit;
            if (!AlreadyAddedLoop)
                ConcatItemsScriptsLoop ^= Item.DangerouslySetControlsScriptLoop;
        }

        declare Parity = (I % 2 * 2 - 1);
        declare DefaultRot = (I * 36 + 40) % 9 * Parity / 2.;
        declare TargetRot = -DefaultRot * 4 % 7 / 2;

        MenusML ^=
     """<frame pos="{{{6.67 + (70. + 6.67) * I}}} -86" data-name="{{{Item.Name}}}">
            <frame id="Frame_Controls" pos="35 -55.66">
                {{{Item.DangerouslySetControls}}}
            </frame>

            <quad size="70 111.33" scriptevents="1" id="Quad_Trigger"
                    data-preventdefault="{{{Item.PreventDefault}}}"
                    data-target="Quad_Icon Quad_Poster Label_Name Quad_Background Frame_Controls"
                    data-default-anim="<quad opacity=&quot;0.8&quot; scale=&quot;1&quot; pos=&quot;0 -40.33&quot; rot=&quot;{{{DefaultRot}}}&quot;/> <quad scale=&quot;1.&quot; pos=&quot;0 0&quot;/> <label scale=&quot;1.&quot; pos=&quot;0 -95.67&quot;/> <quad opacity=&quot;0.8&quot; scale=&quot;1&quot;/> <frame scale=&quot;1.&quot;/>"
                    data-target-anim="<quad opacity=&quot;1&quot; scale=&quot;1.12&quot; pos=&quot;0 -39&quot; rot=&quot;{{{TargetRot}}}&quot;/> <quad scale=&quot;1.06&quot; pos=&quot;0 4&quot;/> <label scale=&quot;1.12&quot; pos=&quot;0 -98.33&quot;/> <quad opacity=&quot;1&quot; scale=&quot;1.06&quot;/> <frame scale=&quot;1.06&quot;/>"/>

            <frame id="Frame_Content" pos="35">
                <quad image="file://Media/Images/Obstacle/Moods/{{{Item.Image}}}.png" rot="{{{DefaultRot}}}" opacity="0.8" pos="0 -40.33" size="28.17 34.17" keepratio="Fit" halign="center" valign="center" id="Quad_Icon"/>
                <quad image="file://Media/Images/Obstacle/Moods/F{{{Item.Image}}}.png" size="70 80.67" halign="center" id="Quad_Poster"/>

                <label class="lato" id="Label_Name" text="{{{Item.Name}}}" textprefix="$t" pos="0 -95.67" halign="center" valign="center2" textsize="5" textcolor="fff"/>
                <quad size="70 110.67" pos="0 -55.33" image="file://Media/Images/Obstacle/Menu/FNav.png" halign="center" valign="center" opacity="0.8" id="Quad_Background"/>
            </frame>
        </frame>""";
    }

    return """
{{{Styles::GetStyleSheet()}}}

<frame pos="-160 70" id="Frame_Wrapper" scroll="1" size="320 180">
    <frame id="Frame_Menus">
        {{{MenusML}}}
    </frame>
    <quad scriptevents="1" size="9999 9999" pos="-75 75"/>
</frame>

{{{ScrollML}}}

<script><![CDATA[
    #Include "MathLib" as ML
    #Include "TextLib" as TL
    #Include "ColorLib" as CL

    {{{Styles::GetDeclareGlobals()}}}
    
    main() {
        {{{Styles::GetInitFrameMenus()}}}
        {{{ScrollInit}}}

        declare ItemCount = Frame_Menus.Controls.count;
        declare ItemsWidth = 70. * ItemCount + 6.67 * (ItemCount - 1);
        declare Frame_Wrapper = (Page.GetFirstChild("Frame_Wrapper") as CMlFrame);
        Frame_Wrapper.ScrollMax.Y = (ItemsWidth - 320.) / 320. * Frame_Wrapper.Size.Y;

        {{{ConcatItemsScriptsInit}}}

        while(True) {
            yield;

            if (!PageIsVisible && PendingEvents.count == 0) continue;

            {{{ScrollLoop}}}
            
            Frame_Menus.RelativePosition_V3.X = Frame_Wrapper.ScrollAnimOffset.Y / Frame_Wrapper.ScrollMax.Y * -(ItemsWidth - 320. + 6.67 * 2.);
            Frame_Menus.RelativePosition_V3.Y = -Frame_Wrapper.ScrollAnimOffset.Y + 73.333;

            foreach(Event in PendingEvents) {
                {{{Styles::GetEventLoopActiveItem("window_load")}}}
            }
            {{{ConcatItemsScriptsLoop}}}
        }
    }
]]></script>""";
}