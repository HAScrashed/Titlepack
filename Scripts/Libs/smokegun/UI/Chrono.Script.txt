#Include "Libs/smokegun/Tools.Script.txt" as Tools
#Include "Libs/miltant/Nadeo_Fork/CustomUI.Script.txt" as CustomUI

#Const  Version     "2022-25-11"
#Const  ScriptName  "Chrono.Script.txt"


Void UpdateLayer(CSmPlayer _Player) { }

Text GetLayer() {
    CustomUI::Add("Frame_Chrono", <0., -70.>, <40., 10.>);
    return """
<manialink version="3" name="Obstacle:Chrono">
    <frame id="Frame_Chrono" class="LibCustomUI_Module">
        <frame pos="0 -70">
            <label id="Label_Chrono" pos="0 -0.5" size="40 10" halign="center" valign="center2" text="00:00:00" textfont="OswaldMono" textsize="7"/>
            <quad pos="0 0" size="40 10" style="BgRaceScore2" substyle="BgCardPlayer" halign="center" valign="center"/>
        </frame>
    </frame>
<script><!--
    #Include "TextLib" as TL

    Integer GetTime(CPlayer _Player) {
        if (_Player == Null)
            return 0;
        declare netread Net_StartTime for _Player = 0;
        return GameTime - Net_StartTime;
    }

    main() {
        {{{CustomUI::InjectMLInit()}}}
        wait(InputPlayer != Null && Page != Null);

        declare Frame_Chrono        <=> (Page.GetFirstChild("Frame_Chrono") as CMlFrame);
        declare Label_Chrono        <=> (Frame_Chrono.GetFirstChild("Label_Chrono") as CMlLabel);
        Frame_Chrono.Visible = True;

        declare PrevUsedJump = False;
        declare PrevWarmup = False;
        declare CurrentTimeString = "00:00:00";

        while (True) {
            yield;

            if (!PageIsVisible)
                continue;

            declare LocalPlayer <=> InputPlayer;
            if (GUIPlayer != Null) LocalPlayer <=> GUIPlayer;
            if (LocalPlayer == Null) continue;

            declare netread Net_UsedJump for LocalPlayer = False;
            if (PrevUsedJump != Net_UsedJump) {
                PrevUsedJump = Net_UsedJump;

                // Set the color to red if the player has jumped
                if (Net_UsedJump)
                    Label_Chrono.TextColor = <0.7, 0., 0.>;
                else
                    Label_Chrono.TextColor = <1., 1., 1.>;
            }

            declare netread Net_IsWarmup for Teams[0] = False;
            if (PrevWarmup != Net_IsWarmup) {
                PrevWarmup = Net_IsWarmup;

                // Set the color to yellow during warm-up
                if (Net_IsWarmup)
                    Label_Chrono.TextColor = <1., 0.7, 0.>;
                else
                    Label_Chrono.TextColor = <1., 1., 1.>;
            }

            declare netread Net_StartTime for LocalPlayer = -1;
            declare LastStartTime for LocalPlayer = -1;

            if (Net_StartTime > 0) {
                if (!Frame_Chrono.Visible)
                    Frame_Chrono.Show();

                    CurrentTimeString = TL::TimeToText(GetTime(LocalPlayer), True);
            } else if (Frame_Chrono.Visible) {
                Frame_Chrono.Hide();
            }

            //custom colouring TODO generalize
            if (LocalPlayer.Login == "b00by") {
                if (!Net_IsWarmup && !Net_UsedJump && !TL::Find("$", CurrentTimeString, True, True)) {
                    declare TimeString = CurrentTimeString;
                    declare TimeStringLastI = TL::Length(TimeString) - 1;
                    CurrentTimeString = "";

                    declare ColorArray = ["0f0", "0f0", "0f0", "000", "0f0", "0f0", "000", "000", "000", "000", "0f0", "0f0"];
                    declare ColorArrayLastI = ColorArray.count - 1;

                    for (I, 0, TimeStringLastI) {
                        declare Index = TimeStringLastI - I;
                        declare ColorIndex = ColorArrayLastI - I;
                        if (ColorIndex < 0)
                            ColorIndex = 0;

                        CurrentTimeString = "$" ^ ColorArray[ColorIndex] ^ TL::SubString(TimeString, Index, 1) ^ CurrentTimeString;
                    }
                }
            }

            Label_Chrono.Value = CurrentTimeString;
            {{{CustomUI::InjectMLLoop()}}}
        }
    }
--></script>
</manialink>""";
}
