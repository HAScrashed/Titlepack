// Generated from Settings.py and Settings.tmpl


declare Integer G_TimeLimit;	
declare Integer G_ScoreMode;	
declare Integer G_RoundLimit;	
declare Integer G_MinPlayers;	
declare Integer G_PointLimit;	
declare Integer G_PointsMax;	
declare Integer G_PointsMin;	
declare Integer G_PointsDeduced;	
declare Integer G_RoundCooldown;	
declare Integer G_WarmupRounds;	
declare Integer G_WarmupRoundsTime;	
declare Integer G_MinTimeLeft;	
declare Integer G_MaxTimeLeft;	
declare Integer G_CheckpointMarkersCount;	
declare Integer G_EventEdition;	

declare Boolean G_FastRespawn;	
declare Boolean G_AllowJump;	
declare Boolean G_EnableRecords;	
declare Boolean G_LegacyRespawn;	
declare Boolean G_FullAmmoSpawn;	
declare Boolean G_PointDistribution;	
declare Boolean G_ForceInvisibleSkin;	
declare Boolean G_EnablePlayerHighlight;	
declare Boolean G_ForcePvPWeapons;	
declare Boolean G_ForcePvPCollisions;	
declare Boolean G_LockEventsUI;	

declare Real G_NextMapVotingRatio;	
declare Real G_SwitchEventVotingRatio;	

declare Text G_BestNewRecordMsg;	
declare Text G_WorseNewRecordMsg;	
declare Text G_ForceRNGSeed;	
declare Text G_EventHandle;	


Integer GetTimeLimit() {
	return G_TimeLimit;
}

Void SetTimeLimit(Integer _Value) {
	G_TimeLimit = _Value;
}

Integer GetScoreMode() {
	return G_ScoreMode;
}

Void SetScoreMode(Integer _Value) {
	G_ScoreMode = _Value;
}

Integer GetRoundLimit() {
	return G_RoundLimit;
}

Void SetRoundLimit(Integer _Value) {
	G_RoundLimit = _Value;
}

Integer GetMinPlayers() {
	return G_MinPlayers;
}

Void SetMinPlayers(Integer _Value) {
	G_MinPlayers = _Value;
}

Integer GetPointLimit() {
	return G_PointLimit;
}

Void SetPointLimit(Integer _Value) {
	G_PointLimit = _Value;
}

Integer GetPointsMax() {
	return G_PointsMax;
}

Void SetPointsMax(Integer _Value) {
	G_PointsMax = _Value;
}

Integer GetPointsMin() {
	return G_PointsMin;
}

Void SetPointsMin(Integer _Value) {
	G_PointsMin = _Value;
}

Integer GetPointsDeduced() {
	return G_PointsDeduced;
}

Void SetPointsDeduced(Integer _Value) {
	G_PointsDeduced = _Value;
}

Integer GetRoundCooldown() {
	return G_RoundCooldown;
}

Void SetRoundCooldown(Integer _Value) {
	G_RoundCooldown = _Value;
}

Integer GetWarmupRounds() {
	return G_WarmupRounds;
}

Void SetWarmupRounds(Integer _Value) {
	G_WarmupRounds = _Value;
}

Integer GetWarmupRoundsTime() {
	return G_WarmupRoundsTime;
}

Void SetWarmupRoundsTime(Integer _Value) {
	G_WarmupRoundsTime = _Value;
}

Integer GetMinTimeLeft() {
	return G_MinTimeLeft;
}

Void SetMinTimeLeft(Integer _Value) {
	G_MinTimeLeft = _Value;
}

Integer GetMaxTimeLeft() {
	return G_MaxTimeLeft;
}

Void SetMaxTimeLeft(Integer _Value) {
	G_MaxTimeLeft = _Value;
}

Integer GetCheckpointMarkersCount() {
	return G_CheckpointMarkersCount;
}

Void SetCheckpointMarkersCount(Integer _Value) {
	G_CheckpointMarkersCount = _Value;
}

Integer GetEventEdition() {
	return G_EventEdition;
}

Void SetEventEdition(Integer _Value) {
	G_EventEdition = _Value;
}


Boolean GetFastRespawn() {
	return G_FastRespawn;
}

Void SetFastRespawn(Boolean _Value) {
	G_FastRespawn = _Value;
}

Boolean GetAllowJump() {
	return G_AllowJump;
}

Void SetAllowJump(Boolean _Value) {
	G_AllowJump = _Value;
}

Boolean GetEnableRecords() {
	return G_EnableRecords;
}

Void SetEnableRecords(Boolean _Value) {
	G_EnableRecords = _Value;
}

Boolean GetLegacyRespawn() {
	return G_LegacyRespawn;
}

Void SetLegacyRespawn(Boolean _Value) {
	G_LegacyRespawn = _Value;
}

Boolean GetFullAmmoSpawn() {
	return G_FullAmmoSpawn;
}

Void SetFullAmmoSpawn(Boolean _Value) {
	G_FullAmmoSpawn = _Value;
}

Boolean GetPointDistribution() {
	return G_PointDistribution;
}

Void SetPointDistribution(Boolean _Value) {
	G_PointDistribution = _Value;
}

Boolean GetForceInvisibleSkin() {
	return G_ForceInvisibleSkin;
}

Void SetForceInvisibleSkin(Boolean _Value) {
	G_ForceInvisibleSkin = _Value;
}

Boolean GetEnablePlayerHighlight() {
	return G_EnablePlayerHighlight;
}

Void SetEnablePlayerHighlight(Boolean _Value) {
	G_EnablePlayerHighlight = _Value;
}

Boolean GetForcePvPWeapons() {
	return G_ForcePvPWeapons;
}

Void SetForcePvPWeapons(Boolean _Value) {
	G_ForcePvPWeapons = _Value;
}

Boolean GetForcePvPCollisions() {
	return G_ForcePvPCollisions;
}

Void SetForcePvPCollisions(Boolean _Value) {
	G_ForcePvPCollisions = _Value;
}

Boolean GetLockEventsUI() {
	return G_LockEventsUI;
}

Void SetLockEventsUI(Boolean _Value) {
	G_LockEventsUI = _Value;
}


Real GetNextMapVotingRatio() {
	return G_NextMapVotingRatio;
}

Void SetNextMapVotingRatio(Real _Value) {
	G_NextMapVotingRatio = _Value;
}

Real GetSwitchEventVotingRatio() {
	return G_SwitchEventVotingRatio;
}

Void SetSwitchEventVotingRatio(Real _Value) {
	G_SwitchEventVotingRatio = _Value;
}


Text GetBestNewRecordMsg() {
	return G_BestNewRecordMsg;
}

Void SetBestNewRecordMsg(Text _Value) {
	G_BestNewRecordMsg = _Value;
}

Text GetWorseNewRecordMsg() {
	return G_WorseNewRecordMsg;
}

Void SetWorseNewRecordMsg(Text _Value) {
	G_WorseNewRecordMsg = _Value;
}

Text GetForceRNGSeed() {
	return G_ForceRNGSeed;
}

Void SetForceRNGSeed(Text _Value) {
	G_ForceRNGSeed = _Value;
}

Text GetEventHandle() {
	return G_EventHandle;
}

Void SetEventHandle(Text _Value) {
	G_EventHandle = _Value;
}


