#Include "Libs/miltant/ObstacleV2/Titlepack/Menus/Editors/Index.Script.txt"		as Editors
#Include "Libs/miltant/ObstacleV2/Titlepack/Menus/Credits/Index.Script.txt"		as Credits
#Include "Libs/miltant/ObstacleV2/Titlepack/Menus/Play/Index.Script.txt"		as Play
#Include "Libs/miltant/ObstacleV2/Titlepack/Menus/Home/Index.Script.txt"		as Home
#Include "Libs/miltant/ObstacleV2/Titlepack/Menus/Windows.Script.txt"			as Windows
#Include "Libs/Nadeo_Fork/Common/Core/MenuLayers.Script.txt"					as Layers
#Include "Libs/miltant/ObstacleV2/ManialinkLib.Script.txt"						as Styles

Text Build() {
	declare ML_Text =  """
<manialink version="3" name="L_Menus">
	{{{Styles::GetStyleSheet()}}}
	<framemodel id="Model_MenuItem">
		<quad halign="center" valign="center2" size="25 7.17" id="Quad_Trigger" scriptevents="1"
			data-target="Label_Text Quad_Square Quad_Underline" data-anim-length="70"
			data-default-anim="<label pos=&quot;0 .33&quot;/> <quad rot=&quot;45&quot; scale=&quot;1&quot;/> <quad scale=&quot;1&quot;/>"
			data-target-anim="<label pos=&quot;0 0&quot;/> <quad rot=&quot;0&quot; scale=&quot;1.2&quot;/> <quad scale=&quot;0.92&quot;/>"/>

		<quad halign="center" valign="center" size="2 2" pos="0 -3.16" rot="45" image="file://Media/Images/Obstacle/Menu/Rectangle.png" id="Quad_Square"/>
		<quad halign="center" size="17 0.5" pos="0 -3" image="file://Media/Images/Obstacle/Menu/BNav.png" id="Quad_Underline"/>

		<label halign="center" valign="center2" textprefix="$t" class="lato" pos="0 .33" id="Label_Text"/>
	</framemodel>
	<frame pos="-160 90">
		<label text="" class="lato" pos="75.5 -8.9" halign="center" valign="center2"
			textsize="5" id="Label_Home" data-name="home" scriptevents="1"
			data-target="Label_Home"
			data-default-anim="<label scale=&quot;1.&quot;/>" data-target-anim="<label scale=&quot;1.066&quot;/>"/>

		<frame id="Frame_Menus" pos="10">
			<frameinstance pos="97.5 -8.66" data-name="editors" modelid="Model_MenuItem"/>
			<frameinstance pos="125.83 -8.66" data-name="profile" modelid="Model_MenuItem"/>
			<frameinstance pos="159.88 -8.66" data-name="play" modelid="Model_MenuItem"/>
			<frameinstance pos="194.17 -8.66" data-name="credits" modelid="Model_MenuItem"/>
			<frameinstance pos="222.5 -8.66" data-name="quit" modelid="Model_MenuItem"/>
		</frame>

		<label text="" class="lato" pos="241.67 -5.6" textsize="5" hidden="1"/>
		<label text="1000" pos="249.33 -6.33" textsize="3" class="lato" hidden="1"/>

		<quad pos="3.33 -3.83" size="11.17 8.83" image="file://Media/Images/Obstacle/Menu/LogoWeb.png"/>
		<quad size="320 16.67" bgcolor="0009"/>
	</frame>

	<script><![CDATA[
		#Include "MathLib" as ML
		#Include "TextLib" as TL
		#Include "ColorLib" as CL
		
		main() {
            {{{Styles::GetInitFrameMenus()}}}

			EnableMenuNavigationInputs = True;

			foreach (MenuItem in Frame_Menus.Controls) {
				declare Frame_MenuItem = (MenuItem as CMlFrame);
				declare Label_Text = (Frame_MenuItem.GetFirstChild("Label_Text") as CMlLabel);

				if (Frame_MenuItem.DataAttributeExists("name")) {
					Label_Text.SetText(Frame_MenuItem.DataAttributeGet("name"));

					if (Frame_MenuItem.DataAttributeGet("name") == "play") {
						declare Quad_Square = (Frame_MenuItem.GetFirstChild("Quad_Square") as CMlQuad);
						Label_Text.TextSizeReal = 3.6;
						Quad_Square.ChangeImageUrl("file://Media/Images/Obstacle/Menu/Rectangle_Play.png");
					}
				}
			}


			while(True) {
				yield;

				if (!PageIsVisible && PendingEvents.count == 0) continue;

				foreach(Event in PendingEvents) {
                    {{{Styles::GetEventLoopActiveItem()}}}
				}
			}
		}
	]]></script>
</manialink>
	""";

	return ML_Text;
}

Void Load() {
	declare LayerName = "L_Menu";
	declare Text MLText = Build();

	Layers::Create(LayerName, MLText);
	Layers::Attach(LayerName);

	Home::Load();
	Editors::Load();
	Play::Load();
	Credits::Load();

	Windows::Load(Home::GetName());
}



Void Loop() {
	foreach(Event in PendingEvents) {
		if ( Event.Type == CManiaAppEvent::EType::LayerCustomEvent &&
			 Event.CustomEventData.count > 0 &&
			 Event.CustomEventType == "menu_item_click") {
			switch (Event.CustomEventData[0]) {
				case "home": {
					Windows::Load(Home::GetName());
				}

				case "editors": {
					TitleControl.OpenEditor(CTitleControl::EEditorType::InterfaceDesigner);
					//Windows::Load(Editors::GetName());
				}

				case "profile": {
					Menu_Profile();
				}

				case "play": {
					Windows::Load(Play::GetName());
				}

				case "credits": {
					Windows::Load(Credits::GetName());
				}

				case "quit": {
					Menu_Quit();
				}
			}
		}
	}

	Home::Loop();
	Editors::Loop();
	Credits::Loop();
	Windows::Loop();
}