#Include "MathLib" as ML
#Include "Libs/Nadeo/Message.Script.txt" as Message
#Include "Libs/smokegun/Constants.Script.txt" as Constants


#Const Version "2019-01-08"
#Const ScriptName "RespawnBehavior.Script.txt"

Void Yield() {}

Void UpdateLayer() {}

Text GetLayer() {
    return """
<manialink version="3" name="Obstacle:RespawnBehavior">
    <frame pos="-78.5 90"id="RespawnBehavior">
        <label id="Label_RespawnBehavior" pos="3 -2" size="25 4" textsize="1" halign="left" valign="center2" textfont="OswaldMono"/>
				<quad id="Quad_Indicator" pos="1 -2" size="2 2" halign="center" valign="center2" bgcolor="FFFA" image="file://Media/Images/Common/MarkerArrowDown.png"/>
				<quad id="Quad_Toggler" pos="13.5 -2" size="30 5" style="BgRaceScore2" substyle="BgCardPlayer" halign="center" valign="center" scriptevents="1"/>
				<frame id="Frame_Infos" pos="12.5 -4.5">
					<label size="45 6" textsize="1" halign="center" textfont="OswaldMono" text="Press F4 to always restart from the beginning. Press F5 to disable restart from the beginning. " valign="top" pos="0 -1" autonewline="1"/>
					<quad  size="50 8" style="BgRaceScore2" substyle="BgCardPlayer" pos="0 0" halign="center" valign="top"/>
				</frame>
    </frame>

<script><!--
    #Include "TextLib" as TL

    declare CMlQuad Quad_Toggler;
    declare CMlQuad Quad_Indicator;
    declare CMlFrame Frame_Infos;

    Text GetRespawnText(Integer _RespawnBehavior) {
        declare Result = "Respawn: ERROR";
        switch (_RespawnBehavior) {
            case {{{Constants::C_RespawnBehavior_Normal}}}: Result = "Respawn: NORMAL";
            case {{{Constants::C_RespawnBehavior_FullRestart}}}: Result = "Respawn: $f00RESTART$z";
            case {{{Constants::C_RespawnBehavior_FullLocked}}}: Result = "Respawn: $f00CANNOT RESTART$z";
            default: {}
        }
        return Result;
    }

    Void HideInfos() {
        if (!Frame_Infos.Visible)
            return;
        Frame_Infos.Hide();
        Quad_Indicator.RelativeRotation = 0.;
    }

    Void ShowInfos() {
        if (Frame_Infos.Visible)
            return;
        Frame_Infos.Show();
        Quad_Indicator.RelativeRotation = 180.;
    }

    main() {
        wait(InputPlayer != Null && Page != Null);

        declare Label_RespawnBehavior <=> (Page.GetFirstChild("Label_RespawnBehavior") as CMlLabel);

        Quad_Toggler <=> (Page.GetFirstChild("Quad_Toggler") as CMlQuad);
        Quad_Indicator <=> (Page.GetFirstChild("Quad_Indicator") as CMlQuad);
        Frame_Infos <=> (Page.GetFirstChild("Frame_Infos") as CMlFrame);

        HideInfos();

        declare netwrite Net_RespawnBehavior for UI = {{{Constants::C_RespawnBehavior_Normal}}};
        declare LastRespawnBehavior = -1;

        while (True) {
            yield;

            // Toggle respawn behavior
            foreach (Event in PendingEvents) {
                switch (Event.Type) {
                    case CMlScriptEvent::Type::KeyPress: {
                        switch (Event.CharPressed) {
                            // F4 - Change respawn behavior
                            case "2686976": {
                                if (Net_RespawnBehavior == {{{Constants::C_RespawnBehavior_FullRestart}}})
                                    Net_RespawnBehavior = {{{Constants::C_RespawnBehavior_Normal}}};
                                else
                                    Net_RespawnBehavior = {{{Constants::C_RespawnBehavior_FullRestart}}};
                            }

                            // F5 - Change respawn lock
                            case "2752512": {
                                if (Net_RespawnBehavior == {{{Constants::C_RespawnBehavior_FullLocked}}})
                                    Net_RespawnBehavior = {{{Constants::C_RespawnBehavior_Normal}}};
                                else
                                    Net_RespawnBehavior = {{{Constants::C_RespawnBehavior_FullLocked}}};
                            }
                        }
                    }
                    case CMlScriptEvent::Type::MouseClick: {
                        if (Frame_Infos.Visible)
                            HideInfos();
                        else
                            ShowInfos();
                    }
                }
            }

            if (LastRespawnBehavior != Net_RespawnBehavior) {
                Label_RespawnBehavior.Value = GetRespawnText(Net_RespawnBehavior);
                LastRespawnBehavior = Net_RespawnBehavior;
            }
        }
     }

--></script>
</manialink>""";
}
