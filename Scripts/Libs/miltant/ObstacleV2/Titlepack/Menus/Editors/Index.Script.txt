#Include "Libs/miltant/ObstacleV2/Titlepack/Menus/Windows.Script.txt"			as Windows
#Include "Libs/miltant/ObstacleV2/ManialinkLib.Script.txt"						as Styles
#Include "Libs/miltant/ObstacleV2/Titlepack/Menus/SubMenu/Index.Script.txt"		as SubMenu


Text GetName() {
	return "editors";
}

Void Load() {
	declare SubMenu::K_SubMenu[] SubMenus;

	declare SubMenu::K_SubMenu Maps;
	Maps.Name = "Maps";
	SubMenus.add(Maps);

	declare SubMenu::K_SubMenu Replay;
	Replay.Name = "Replay";
	SubMenus.add(Replay);

	declare SubMenu::K_SubMenu Item;
	Item.Name = "Item";
	SubMenus.add(Item);

	declare SubMenu::K_SubMenu Action;
	Action.Name = "Action";
	SubMenus.add(Action);

	declare SubMenu::K_SubMenu Interface;
	Interface.Name = "Interface";
	SubMenus.add(Interface);

	declare SubMenu::K_SubMenu Ghost;
	Ghost.Name = "Ghost";
	SubMenus.add(Ghost);

	declare SubMenu::K_SubMenu Module;
	Module.Name = "Module";
	SubMenus.add(Module);



	declare Windows::K_Window Window;
	Window.Name = GetName();
	Window.Manialink = SubMenu::Build(SubMenus);
	Window.Animation = CUILayer::EUILayerAnimation::LeftFast;

	Windows::CreateWindow(Window);
}

Void Loop() {
	foreach(Event in PendingEvents) {
		if ( Event.Type == CManiaAppEvent::EType::LayerCustomEvent &&
			 Event.CustomEventData.count > 0 &&
			 Event.CustomEventType == "submenu_item_click") {
			switch (Event.CustomEventData[0]) {
				case "Interface": {
					TitleControl.OpenEditor(CTitleControl::EEditorType::InterfaceDesigner);
				}
			}
		}
	}
}