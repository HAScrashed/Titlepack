#Include "Libs/miltant/ObstacleV2/Titlepack/Dialogs/Index.Script.txt"   as Dialogs

#Const C_Dialog_Close "Explorer_Close"

#Struct K_MapParams {
	Text decoration;
	Text mod;
}



Text Build() {
	return """
<manialink version="3">
	<frame pos="-104.25 49.75" size="80 111">
		<frame id="Frame_Header">
			<label pos="3.67 -2" text="Edit" textfont="light" textcolor="fff" textsize="3.5" id="Label_Title"/>
			<frame pos="12.67 -11.9">
				<label text="Confirm" textprefix=" " textfont="light" textcolor="fff" halign="center" valign="center2" textsize="1.7" pos="0 -.33"/>
				<quad size="18.5 6" id="Button_Confirm" halign="center" valign="center" imge="file://Media/Images/Obstacle/Dialogs/BActive18.png" scriptevents="1"/>
			</frame>

			<label textcolor="fff" pos="77 -4" text="x" valign="center2" halign="center" scriptevents="1" id="Label_NewMap"/>
			<label pos="25 -4" text="New map" textfont="light" textcolor="fff" textsize="3.5" id="Label_Name" size="55 7" halign="left" valign="center2" focusareacolor1="444" focusareacolor2="444"/>
			
		</frame>

		<frame id="Frame_Body" pos="3.67 -17.66">
			<quad pos="-3.67" size="83.5 55.9" id="Quad_Preview"/>
			
			<frame pos="0 -60" id="Frame_Deco">
				<label pos="8.08 -4" size="8 8" text="" halign="center" valign="center2" id="Deco_Minus" scriptevents="1" hidden="1" focusareacolor1="0009" focusareacolor2="ccc5"/>
				<label pos="38.08 -4" size="40 8" text="Land" halign="center" valign="center2" id="Label_Deco"/>
				<label pos="68.08 -4" size="8 8" text="" halign="center" valign="center2" id="Deco_Plus" scriptevents="1" focusareacolor1="0009" focusareacolor2="ccc5"/>
			</frame>
			<frame pos="0 -70" id="Frame_Mood">
				<label pos="8.08 -4" size="8 8" text="" halign="center" valign="center2" id="Mood_Minus" scriptevents="1" focusareacolor1="0009" focusareacolor2="ccc5"/>
				<label pos="38.08 -4" size="40 8" text="Day" halign="center" valign="center2" id="Label_Mood"/>
				<label pos="68.08 -4" size="8 8" text="" halign="center" valign="center2" id="Mood_Plus" scriptevents="1" focusareacolor1="0009" focusareacolor2="ccc5"/>
			</frame>
			<frame pos="0 -80" id="Frame_Mod">
				<label pos="8.08 -4" size="8 8" text="" halign="center" valign="center2" id="Mod_Minus" scriptevents="1" hidden="1" focusareacolor1="0009" focusareacolor2="ccc5"/>
				<label pos="38.08 -4" size="40 8" text="Default Textures" halign="center" valign="center2" id="Label_Mod"/>
				<label pos="68.08 -4" size="8 8" text="" halign="center" valign="center2" id="Mod_Plus" scriptevents="1" hidden="1" focusareacolor1="0009" focusareacolor2="ccc5"/>
			</frame>
		</frame>
	</frame>
	<script><![CDATA[
	#Include "MathLib" as ML

	#Const Decos ["Land", "Water"]
	#Const Moods ["Sunrise", "Day", "Sunset", "Night"]

	declare Integer G_SelectedDeco;
	declare Integer G_SelectedMood;
	declare Integer G_SelectedMod;

	Void Update() {
		declare Label_Map = (Page.GetFirstChild("Label_Name") as CMlLabel);
		declare Quad_Preview = (Page.GetFirstChild("Quad_Preview") as CMlQuad);
		declare Label_Deco = (Page.GetFirstChild("Label_Deco") as CMlLabel);
		declare Label_Mood = (Page.GetFirstChild("Label_Mood") as CMlLabel);
		declare Label_Mod = (Page.GetFirstChild("Label_Mod") as CMlLabel);

		declare Text[] ObsStore_Skins for LocalUser;
		declare Text ObsStore_SelectedMap_Name for LocalUser;
		declare Text ObsStore_SelectedMap for LocalUser;
		declare CVideo[Text] ObsStore_Previews for LocalUser;

		if (ObsStore_SelectedMap == "") {
			Label_Map.SetText("New map");
			declare V <=> ObsStore_Previews[Decos[G_SelectedDeco] ^ Moods[G_SelectedMood]];
			Quad_Preview.Image = V.Image;
			V.Play();
		} else {
			Label_Map.SetText(ObsStore_SelectedMap_Name);
			Quad_Preview.ChangeImageUrl("file://Thumbnails/MapUid/" ^ ObsStore_SelectedMap);
		}
		Label_Deco.SetText(Decos[G_SelectedDeco]);
		Label_Mood.SetText(Moods[G_SelectedMood]);

		if (G_SelectedMod < ObsStore_Skins.count) {
			Label_Mod.SetText(ObsStore_Skins[G_SelectedMod]);
		} else {
			Label_Mod.SetText("Default Textures");
		}
	}

	main () {
		declare Label_Map = (Page.GetFirstChild("Label_Name") as CMlLabel);
		declare Quad_Preview = (Page.GetFirstChild("Quad_Preview") as CMlQuad);
		declare Label_Deco = (Page.GetFirstChild("Label_Deco") as CMlLabel);
		declare Label_Mood = (Page.GetFirstChild("Label_Mood") as CMlLabel);
		declare Label_Mod = (Page.GetFirstChild("Label_Mod") as CMlLabel);

		declare Text[] ObsStore_Skins for LocalUser;
		declare Text ObsStore_SelectedMap_Name for LocalUser;
		declare Text ObsStore_SelectedMap for LocalUser;
		declare CVideo[Text] ObsStore_Previews for LocalUser;
		
		declare Skins_Loaded = False;

		foreach (Deco in Decos) {
			foreach (Mood in Moods) {
				declare V = Video.CreateVideo("file://Media/Images/Previews/" ^ Deco ^ Mood ^ ".webm", True, True);
				ObsStore_Previews[Deco ^ Mood] = V;
			}
		}

		G_SelectedMood = 1;
		Update();

		while (True) {
			if (!Skins_Loaded && ObsStore_Skins.count > 0) {
				declare Mod_Plus = (Page.GetFirstChild("Mod_Plus") as CMlLabel);
				Mod_Plus.Show();

				Skins_Loaded = True;
			}

			foreach (Event in PendingEvents) {
				if (Event.Type == CMlScriptEvent::Type::MouseClick) {
					switch (Event.ControlId) {
						case "Button_Confirm": {
							declare SelectedMod = "";
							if (ObsStore_Skins.count > 0) {
								SelectedMod = ObsStore_Skins[G_SelectedMod];
							}

							declare CustomData = [Decos[G_SelectedDeco], Moods[G_SelectedMood], SelectedMod];
							SendCustomEvent("{{{C_Dialog_Close}}}", CustomData);
						}
						case "Label_NewMap": {
							ObsStore_SelectedMap_Name = "";
							ObsStore_SelectedMap = "";
						}
						case "Deco_Plus": {
							G_SelectedDeco = ML::Clamp(G_SelectedDeco + 1, 0, Decos.count - 1);

							declare Deco_Minus = (Page.GetFirstChild("Deco_Minus") as CMlLabel);
							Deco_Minus.Show();
							Event.Control.Hide();
						}
						case "Deco_Minus": {
							G_SelectedDeco = ML::Clamp(G_SelectedDeco - 1, 0, Decos.count - 1);

							declare Deco_Plus = (Page.GetFirstChild("Deco_Plus") as CMlLabel);
							Deco_Plus.Show();
							Event.Control.Hide();
						}
						case "Mood_Plus": {
							G_SelectedMood = ML::Clamp(G_SelectedMood + 1, 0, Moods.count - 1);

							declare Mood_Minus = (Page.GetFirstChild("Mood_Minus") as CMlLabel);
							Mood_Minus.Show();

							if (G_SelectedMood == Moods.count - 1) {
								Event.Control.Hide();
							}
						}
						case "Mood_Minus": {
							G_SelectedMood = ML::Clamp(G_SelectedMood - 1, 0, Moods.count - 1);

							declare Mood_Plus = (Page.GetFirstChild("Mood_Plus") as CMlLabel);
							Mood_Plus.Show();

							if (G_SelectedMood == 0) {
								Event.Control.Hide();
							}
						}
						case "Mod_Plus": {
							if (ObsStore_Skins.count > 0) {
								G_SelectedMod = ML::Clamp(G_SelectedMod + 1, 0, ObsStore_Skins.count - 1);

								declare Mod_Minus = (Page.GetFirstChild("Mod_Minus") as CMlLabel);
								Mod_Minus.Show();
	
								if (G_SelectedMod == ObsStore_Skins.count - 1) {
									Event.Control.Hide();
								}
							}
						}
						case "Mod_Minus": {
							if (ObsStore_Skins.count > 0) {
								G_SelectedMod = ML::Clamp(G_SelectedMod - 1, 0, ObsStore_Skins.count - 1);

								declare Mod_Plus = (Page.GetFirstChild("Mod_Plus") as CMlLabel);
								Mod_Plus.Show();

								if (G_SelectedMod == 0) {
									Event.Control.Hide();
								}
							}
						}
					}

					Update();
				}
			}
			yield;
		}
	}
]]></script>
</manialink>
""";
}

Void Load() {
	Dialogs::RegisterDialog("new_map", "", Build(), C_Dialog_Close);
}

K_MapParams Craft() {
	declare Result = Dialogs::Prompt("new_map", "new_map");
	declare K_MapParams Params;

	if (Result.Success && Result.CustomData.count > 2) {
		Params.decoration = Result.CustomData[0] ^ "48x48" ^ Result.CustomData[1];
		Params.mod = Result.CustomData[2];
	}
	return Params;
}