#Include "Libs/miltant/ObstacleV2/Titlepack/Menus/Windows.Script.txt"	as Windows
#Include "Libs/miltant/ObstacleV2/ManialinkLib.Script.txt"				as Styles
#Include "Libs/smokegun/Constants.Script.txt"							as Constants

#Include "Libs/miltant/Nadeo_Fork/MP4/TPLagoon/Components/Multiplayer/ChannelInfoStructs.Script.txt"    as ChannelInfoStructs


Text GetName() {
	return "home";
}

Text Build() {
	return """
{{{Styles::GetStyleSheet()}}}
<frame pos="-160 73.33">
	<frame pos="6.67 -26" id="Frame_Menus" size="70 112">
		<frame data-name="open_news" size="70 86">
			<quad size="70 85" scriptevents="1" id="Quad_Target" data-target="Quad_News"
				data-default-anim="<quad scale=&quot;1.&quot;/>" data-target-anim="<quad scale=&quot;1.066&quot;/>"/>

			<label text="Latest News" textsize="5" class="lato" halign="center" valign="center2" pos="35 -5" id="Label_News" textcolor="fff"/> 
			<quad size="70 9" image="file://Media/Images/Obstacle/Home/BPatchNote.png"/>

			<frame pos="0 -10.33" size="70 74.67">
				<quad size="70 74.67" image="file://Media/Images/Obstacle/Home/ContoursNews.png"/>
				<frame pos="34.67 -37.67" clip="1" clipsizen="69.33 74.17">
					<quad size="70 74.67" halign="center" valign="center" image="file://Media/Images/Obstacle/Home/News.png" id="Quad_News"/>
				</frame>
			</frame>
		</frame>

		<frame data-name="open_server" pos="0 -87">
			<quad size="70 24.33" scriptevents="1" id="Quad_Target"
				data-target="Quad_Server"
				data-default-anim="<quad scale=&quot;1.&quot;/>"
				data-target-anim="<quad scale=&quot;1.06&quot;/>"/>

			<label class="lato" text="Top Server" textprefix="$t" pos="35 -3.8" halign="center" textsize="5" textcolor="fff"/>
			<label class="lato" text="$ff0SSM° - Obstacle" textsize="1" textprefix="$t" size="36" pos="32 -16.67" halign="center" valign="center2" id="Label_TopServer" textcolor="fff"/>
			<label class="lato" text="" textprefix="$t" pos="54.5 -16.67" halign="center" valign="center2" id="Label_JoinArrow" textcolor="fff"/>
			<quad size="49.33 7.5" halign="center" valign="center2" pos="35 -16.42"
				image="file://Media/Images/Obstacle/Home/BServer.png" id="Quad_Server"/>
			<quad size="70 24.33" image="file://Media/Images/Obstacle/Home/FServer.png"/>
		</frame>
	</frame>
</frame>

<script><![CDATA[
	#Include "MathLib" as ML
	#Include "TextLib" as TL
	#Include "ColorLib" as CL

	{{{ChannelInfoStructs::K_ServerInfo_ML}}}
	{{{Styles::GetDeclareGlobals()}}}

	main() {
		{{{Styles::GetInitFrameMenus()}}}
		declare Label_TopServer = (Page.GetFirstChild("Label_TopServer") as CMlLabel);
		declare Label_JoinArrow = (Page.GetFirstChild("Label_JoinArrow") as CMlLabel);

		declare K_ServerInfo[] ObsStore_TopServers for LocalUser;
		declare Text TopServer = ". . .";
		declare Text TopServer_Login = "";
		declare Integer ObsStore_LastUpdate_TopServers for LocalUser;
		declare Integer LastUpdate;

		while(True) {
			yield;

			if (!PageIsVisible && PendingEvents.count == 0) continue;

			foreach(Event in PendingEvents) {
				if (Event.Control != Null) {
					if (Event.Control.DataAttributeExists("target")) {
						switch (Event.Control.DataAttributeGet("target")) {
							case "Quad_Server": {
								switch (Event.Type) {
									case CMlScriptEvent::Type::MouseOver: {
										Label_JoinArrow.SetText(TL::Replace(Label_JoinArrow.Value, "", ""));
									}
									case CMlScriptEvent::Type::MouseOut: {
										Label_JoinArrow.SetText(TL::Replace(Label_JoinArrow.Value, "", ""));
									}
									case CMlScriptEvent::Type::MouseClick: {
										if (TopServer_Login != "")
											SendCustomEvent("join_server", [TopServer_Login]);
									}
								}
							}
							case "Quad_News": {
								if (Event.Type == CMlScriptEvent::Type::MouseClick) {
									OpenLink("{{{Constants::C_WebsiteUrl}}}/latestnews", CMlScript::LinkType::ExternalBrowser);
								}
							}
						}
						{{{Styles::GetEventLoopActiveItem()}}}
					}
				}
			}

			if (LastUpdate != ObsStore_LastUpdate_TopServers) {
				LastUpdate = ObsStore_LastUpdate_TopServers;
				if (ObsStore_TopServers.count > 0) {
					TopServer = ObsStore_TopServers[0].server_name;
					TopServer_Login = ObsStore_TopServers[0].server_login;
				}
			}
			Label_TopServer.SetText(TopServer);
		}
	}
]]></script>""";
}

Void Load() {
	declare Windows::K_Window Window;
	Window.Name = GetName();
	Window.Manialink = Build();
	Window.Animation = CUILayer::EUILayerAnimation::LeftSlow;

	Windows::CreateWindow(Window);
}

Void Loop() {
	foreach(Event in PendingEvents) {
		if ( Event.Type == CManiaAppEvent::EType::LayerCustomEvent &&
			Event.CustomEventData.count > 0 &&
			Event.CustomEventType == "menu_item_click") {
			switch (Event.CustomEventData[0]) {
				case "open_news": {

				}

				case "open_server": {

				}
			}
		}
	}
}