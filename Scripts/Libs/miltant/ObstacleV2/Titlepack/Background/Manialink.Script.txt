Text Build() {
	return """
<manialink version="3" name="L_Background">
	<frame id="Frame_All" z-index="-80">
		<quad id="Quad_Background"
			halign="center" valign="center"
			size="320 180"/>
	</frame>
	
	
	<script><![CDATA[
		#Include "TextLib" as Background_TextLib

		declare CVideo[Text]	G_Videos;
		declare CMlQuad[Text]	G_VideoQuads;
		declare CAudioSource G_Music;
	
		Void Load(Text _Name, Text _Path) { // TODO : Ajouter un destroy (pas urgent)
			declare V = Video.CreateVideo(_Path, True, True);
			declare Q = (Page.GetFirstChild(_Name) as CMlQuad);
			Q.Image = V.Image;
			
			G_Videos[_Name] 			= V;
			G_VideoQuads[_Name]			= Q;
			G_VideoQuads[_Name].Hide();
		}
		
		Void StopMusic()
		{
			if (G_Music != Null)
			{
				G_Music.Stop();
				Audio.DestroySound(G_Music);
				G_Music = Null;
			}
			Audio.LimitMusicVolumedB = -100.;
		}

		Void PlayMusic(Text _MusicPath)
		{
			if (G_Music != Null)
			{
				G_Music.Stop();
				Audio.DestroySound(G_Music);
				G_Music = Null;
			}
			if (_MusicPath == "") {
				return;
			}
			Audio.LimitMusicVolumedB = 0.;
			G_Music = Audio.CreateSound(_MusicPath, 1., True, True, False);
			G_Music.FadeDuration = 0.;
			G_Music.Stop();
			G_Music.Play();
		}


		Void UpdateBackGroundImg(Text _Background)
		{
			declare CMlQuad Quad_Background <=> (Page.GetFirstChild("Quad_Background")	as CMlQuad);
			Quad_Background.ChangeImageUrl(_Background);
		}
		
		Void StartVideo(Text _Background)
		{
			Load("Quad_Background", _Background);
			G_Videos["Quad_Background"].Play();
			G_VideoQuads["Quad_Background"].Show();
			PlayMusic("https://cdn.discordapp.com/attachments/456854627153870858/1079354081493143582/Obstacle_Update_Opening.ogg");
		}

		Void UpdateBackGround(Text _Background)
		{
			declare Boolean _IsVideo;
			declare Text[] Extensionfile = Background_TextLib::Split(".", _Background);
			if (Extensionfile.count == 0) {
				UpdateBackGroundImg("");
				return;
			}
			_IsVideo = (Extensionfile[Extensionfile.count - 1] == "webm");
			if (_IsVideo) {
				StartVideo(_Background);
			} else {
				UpdateBackGroundImg(_Background);
			}
		}

		main() {
			declare LastPause = 0.;
			declare VideoCursorDifference = 0.;
			while(True) {
				yield;

				foreach (Video in G_Videos) {
					if (G_Music.PlayCursor == 0.) {
						if (Video.IsPlaying) {
							Video.Stop();
							LastPause = Video.PlayCursor;
						}
					} else if (!Video.IsPlaying) {
						Video.Play();
						G_Music.PlayCursor = 0.;
					}
				}

				if (!PageIsVisible && PendingEvents.count == 0) continue;

				foreach(Event in PendingEvents) {
					switch(Event.Type) {
						case CMlEvent::Type::PluginCustomEvent: {
							switch(Event.CustomEventType) {
								case "UpdateBackGround" : {
									declare Text Background = Event.CustomEventData[0];
									UpdateBackGround(Background);
								}
							}
						}
					}
				}
			}
		}
	]]></script>
</manialink>
	""";
}